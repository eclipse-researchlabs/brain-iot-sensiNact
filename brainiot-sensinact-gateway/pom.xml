<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright (c) 2017 CEA. ~ All rights reserved. This program and the 
	accompanying materials ~ are made available under the terms of the Eclipse 
	Public License v1.0 ~ which accompanies this distribution, and is available 
	at ~ http://www.eclipse.org/legal/epl-v10.html ~ ~ Contributors: ~ CEA - 
	initial API and implementation -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.sensinact.gateway.brainiot</groupId>
		<artifactId>parent</artifactId>
		<version>1.0</version>
	</parent>
	
	<artifactId>brainiot-sensinact-gateway</artifactId>
	<packaging>bundle</packaging>

	<description>sensiNact Gateway - Single Bundle Packaging</description>

	<dependencies>
		<dependency>
			<groupId>org.eclipse.sensinact.gateway.brainiot</groupId>
			<artifactId>mock-signature-validator</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>osgi.cmpn</artifactId>
			<version>7.0.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>1.8</version>
			    <executions>
			        <execution>
			            <id>download-files</id>
			            <phase>validate</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
		            		<target>
		            		    <get src="https://ftp.fau.de/eclipse/sensinact/gateway/snapshot/sensiNact-gateway-2.0-SNAPSHOT-latest.zip"
		                         dest="${project.build.directory}/"
		                         verbose="false"
		                         usetimestamp="true"/>
		                        <unzip src="${project.build.directory}/sensiNact-gateway-2.0-SNAPSHOT-latest.zip" dest="${project.build.directory}/sensiNact-gateway"/>	                    	
		            		</target>
			             </configuration>
			        </execution>
			     </executions>
			 </plugin>
			 <plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-distribution-jars</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								String basedir = project.basedir.absolutePath.replace('\\','/');							
								File distribution = new File(new File(basedir),"target/sensiNact-gateway");	
								File root = distribution.listFiles()[0];								
								if(root.exists())
								{				
									project.properties.setProperty('rootfile',root.getName());
								}							
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-classes</id>
			            <phase>initialize</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
		            		<target>
		            		    <get src="https://ftp.fau.de/eclipse/sensinact/gateway/snapshot/sensiNact-gateway-2.0-SNAPSHOT-latest.zip"
		                         dest="${project.build.directory}/"
		                         verbose="false"
		                         usetimestamp="true"/>
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/2/mqtt-utils-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/2/org.eclipse.paho.client.mqttv3-1.2.2.jar" dest="${project.build.directory}/classes"/>	                    	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-utils-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	                    	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-common-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	                    	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-datastore-api-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	                 	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-security-none-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	                 	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-core-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	                 	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-generic-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>                	
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/bundle/3/sensinact-northbound-access-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	     	
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/mqtt-sb/mqtt-device-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	               	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/application/application-manager-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	       	
		                        <unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/application/basic-plugin-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>	     
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/rest/http-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/rest/rest-access-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/rest/http-tools-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>
		            			<unzip src="${project.build.directory}/sensiNact-gateway/${rootfile}/load/ttn-device/thethingsnetwork-device-2.0-SNAPSHOT.jar" dest="${project.build.directory}/classes"/>
		            			<delete dir="${project.build.directory}/classes/META-INF/maven"/>
		            			<delete file="${project.build.directory}/classes/META-INF/MANIFEST.MF"/>
		            			<delete file="${project.build.directory}/classes/META-INF/MANIFEST.MF"/>
		            			<delete file="${project.build.directory}/classes/META-INF/SELFSIGN.RSA"/>
		            			<delete file="${project.build.directory}/classes/META-INF/SELFSIGN.SF"/>
		            			<delete file="${project.build.directory}/classes/META-INF/ECLIPSE_.RSA"/>
		            			<delete file="${project.build.directory}/classes/META-INF/ECLIPSE_.SF"/>
		            		</target>
			             </configuration>
			        </execution>
			     </executions>
			 </plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Embed-Dependency>*;scope=compile;inline=true</Embed-Dependency>
						<Embed-Transitive>false</Embed-Transitive>
						<Export-Package>
							org.json;version="20080701",
							org.eclipse.sensinact.gateway.*;version="2.0.0"
						</Export-Package>
						<_nouses>true</_nouses>
						<DynamicImport-Package>
							javax.activation,
							javax.crypto,
							javax.crypto.interfaces,
							javax.crypto.spec,
							javax.imageio,
							javax.mail,
							javax.mail.internet,
							javax.naming,
							javax.naming.directory,
							javax.net.ssl,
							javax.security.auth.callback,
							javax.security.auth.x500,
							javax.servlet,
							javax.servlet.annotation,
							javax.servlet.http,javax.xml.parsers
						</DynamicImport-Package>
						<Import-Package>
							org.eclipse.jetty.websocket.api,
							org.eclipse.jetty.websocket.api.annotations,
							org.eclipse.jetty.websocket.servlet,
							org.osgi.framework;version="[1.8,2)",
							org.osgi.framework.wiring;version="[1.2,2)",
							org.osgi.service.cm;version="[1.6,2)",
							org.osgi.service.component;version="[1.4,2)",
							org.osgi.service.http.context;version="[1.1,2)",
							org.osgi.service.log;version="[1.4,2)",
							org.osgi.util.tracker;version="[1.5,2)",
							org.slf4j;version="[1.7,2)",
							org.xml.sax
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

